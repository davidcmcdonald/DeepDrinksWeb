---
import BaseLayout from "../layouts/BaseLayout.astro";
import { YoutubeResponseSchema } from "../schema/yt";
const YOUTUBE_API_KEY = import.meta.env.YOUTUBE_API_KEY;

const response = await fetch(
  `https://www.googleapis.com/youtube/v3/search?key=${YOUTUBE_API_KEY}&channelId=UCB9JcmYVd-oHcZyCNraCiug&part=snippet,id&order=date&maxResults=100`
);

const data = await response.json();

const videos = YoutubeResponseSchema.parse(data).items.map((v) => {
  return {
    ...v,
    snippet: {
      ...v.snippet,
      title: v.snippet.title.replaceAll("&#39;", "'").replace("&amp;", "&"),
    },
  };
});

const upcoming = videos.filter((video) => {
  return (
    video.snippet.liveBroadcastContent === "upcoming" &&
    video.snippet.title.toLocaleLowerCase().includes("deep drinks podcast")
  );
});

const previous = videos.filter((video) => {
  return (
    video.snippet.liveBroadcastContent === "none" &&
    video.snippet.title.toLocaleLowerCase().includes("deep drinks podcast")
  );
});
---

<BaseLayout
  frontmatter={{
    title: "Deep Drinks Podcast",
  }}
>
  <div class="p-4">
    <h2 class="text-2xl mb-4">Upcoming</h2>
    {
      upcoming.map((video) => {
        const snip = video.snippet;
        return (
          <article class="flex mb-4 pb-4 border-b border-gray-500">
            <img
              class="w-[200px] sm:w-[200px] md:w-[220px] lg:w-[320px]"
              src={`${snip.thumbnails.medium.url}`}
            />

            <div class="flex flex-col w-full">
              <h3
                class="
				lg:text-3xl 
				md:text-2xl 
				sm:text-1xl
			  ml-4 text-slate-600  flex-1"
              >
                {snip.title}
              </h3>

              <a
                target="_blank"
                rel="noopener noreferrer"
                href={`https://www.youtube.com/watch?v=${video.id.videoId}`}
                class="block max-w-[109px] bg-[#FF5C57] hover:bg-[#FF5C57] text-white font-bold py-2 px-4 rounded self-end"
              >
                Notify me
              </a>
            </div>
          </article>
        );
      })
    }
  </div>

  <div class="p-4">
    <h2 class="text-2xl mb-4">Previous episodes</h2>
    <div
      class="grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-1 xs:grid-cols-2 gap-4"
    >
      {
        previous.map((video) => {
          const snip = video.snippet;
          return (
            <article class="flex flex-col">
              <img class="w-full" src={`${snip.thumbnails.medium.url}`} />

              <div class="flex flex-col h-full">
                <h3 class="text-1xl text-slate-600 mb-2 flex-1">
                  {snip.title}
                </h3>

                <a
                  target="_blank"
                  rel="noopener noreferrer"
                  href={`https://www.youtube.com/watch?v=${video.id.videoId}`}
                  class="block max-w-[109px] bg-[#FF5C57] hover:bg-[#FF5C57] text-white font-bold py-2 px-4 rounded self-end"
                >
                  WATCH
                </a>
              </div>
            </article>
          );
        })
      }
    </div>
  </div>
</BaseLayout>
